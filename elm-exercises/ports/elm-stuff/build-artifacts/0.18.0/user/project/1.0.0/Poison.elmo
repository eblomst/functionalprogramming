var _user$project$Poison$showMessage = function (message) {
	return A2(
		_elm_lang$html$Html$h2,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Poison$poison = _elm_lang$core$Native_Platform.outgoingPort(
	'poison',
	function (v) {
		return v;
	});
var _user$project$Poison$Model = function (a) {
	return {poison: a};
};
var _user$project$Poison$update = F2(
	function (_p0, model) {
		var _p1 = _p0;
		var _p2 = _p1._0;
		return {
			ctor: '_Tuple2',
			_0: _user$project$Poison$Model(
				_elm_lang$core$Maybe$Just(_p2)),
			_1: _user$project$Poison$poison(
				_elm_lang$core$Basics$toString(_p2))
		};
	});
var _user$project$Poison$SetPoison = function (a) {
	return {ctor: 'SetPoison', _0: a};
};
var _user$project$Poison$radio = function (poison) {
	return A2(
		_elm_lang$html$Html$label,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('radio'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$name('poison-radio'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Poison$SetPoison(poison)),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(poison),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Poison$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Poison$radio('Plague'),
			_1: {
				ctor: '::',
				_0: _user$project$Poison$radio('Cholera'),
				_1: {
					ctor: '::',
					_0: _user$project$Poison$radio('Donald Trump'),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Poison$main = _elm_lang$html$Html$program(
	{
		update: _user$project$Poison$update,
		view: _user$project$Poison$view,
		init: {
			ctor: '_Tuple2',
			_0: _user$project$Poison$Model(_elm_lang$core$Maybe$Nothing),
			_1: _elm_lang$core$Platform_Cmd$none
		},
		subscriptions: function (model) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
